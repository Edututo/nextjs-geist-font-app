{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,2NAAA,CAAA,kBAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;MAxBS;AA0BT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;AAIT;MAjCS;AAmCT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6aACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,2MAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAGjC;MAtBS;AAwBT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,6LAAC,qKAAA,CAAA,YAAyB;QACxB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,gBAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;MAhBS;AAkBT,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,2NAAA,CAAA,kBAAe;YAAC,WAAU;;;;;;;;;;;AAGjC;MAhBS","debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6LAAC,qKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,qKAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV;KArBS","debugId":null}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/admin/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Separator } from '@/components/ui/separator'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Switch } from '@/components/ui/switch'\n\ninterface TVData {\n  id: string\n  name: string\n  location: string\n  createdAt: string\n  displayUrl: string\n  currentPresentationId?: string\n}\n\ninterface PresentationData {\n  id: string\n  name: string\n  templateId: string\n  slideDuration: number\n  files: string[]\n  createdAt: string\n  updatedAt: string\n}\n\ninterface TemplateData {\n  id: string\n  name: string\n  description: string\n  backgroundColor: string\n  textColor: string\n  headerColor: string\n  footerColor: string\n  fontFamily: string\n  showClock: boolean\n  showDate: boolean\n  showProgress: boolean\n  createdAt: string\n}\n\ninterface UploadedFile {\n  name: string\n  url: string\n  isUsed: boolean\n  usedInPresentations: string[]\n}\n\nexport default function AdminPanel() {\n  const [tvs, setTvs] = useState<TVData[]>([])\n  const [presentations, setPresentations] = useState<PresentationData[]>([])\n  const [templates, setTemplates] = useState<TemplateData[]>([])\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([])\n  const [selectedFiles, setSelectedFiles] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isUploading, setIsUploading] = useState(false)\n  \n  // Form states para TV\n  const [tvName, setTvName] = useState('')\n  const [tvLocation, setTvLocation] = useState('')\n  const [selectedPresentationId, setSelectedPresentationId] = useState('')\n\n  // Form states para Apresentação\n  const [presentationName, setPresentationName] = useState('')\n  const [selectedTemplateId, setSelectedTemplateId] = useState('')\n  const [slideDuration, setSlideDuration] = useState(5)\n\n  // Form states para Template\n  const [templateName, setTemplateName] = useState('')\n  const [templateDescription, setTemplateDescription] = useState('')\n  const [backgroundColor, setBackgroundColor] = useState('#1a1a1a')\n  const [textColor, setTextColor] = useState('#ffffff')\n  const [headerColor, setHeaderColor] = useState('#2563eb')\n  const [footerColor, setFooterColor] = useState('#374151')\n  const [fontFamily, setFontFamily] = useState('Inter, sans-serif')\n  const [showClock, setShowClock] = useState(true)\n  const [showDate, setShowDate] = useState(true)\n  const [showProgress, setShowProgress] = useState(true)\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    loadTVs()\n    loadPresentations()\n    loadTemplates()\n    loadUploadedFiles()\n  }, [])\n\n  const loadTVs = async () => {\n    try {\n      const response = await fetch('/api/tv')\n      const data = await response.json()\n      if (data.tvs) {\n        setTvs(data.tvs)\n      }\n    } catch (error) {\n      console.error('Erro ao carregar TVs:', error)\n    }\n  }\n\n  const loadPresentations = async () => {\n    try {\n      const response = await fetch('/api/presentations')\n      const data = await response.json()\n      if (data.presentations) {\n        setPresentations(data.presentations)\n      }\n    } catch (error) {\n      console.error('Erro ao carregar apresentações:', error)\n    }\n  }\n\n  const loadTemplates = async () => {\n    try {\n      const response = await fetch('/api/templates')\n      const data = await response.json()\n      if (data.templates) {\n        setTemplates(data.templates)\n      }\n    } catch (error) {\n      console.error('Erro ao carregar templates:', error)\n    }\n  }\n\n  const loadUploadedFiles = async () => {\n    try {\n      const response = await fetch('/api/upload')\n      const data = await response.json()\n      if (data.files) {\n        setUploadedFiles(data.files)\n      }\n    } catch (error) {\n      console.error('Erro ao carregar arquivos:', error)\n    }\n  }\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files || files.length === 0) return\n\n    setIsUploading(true)\n\n    try {\n      for (const file of Array.from(files)) {\n        const formData = new FormData()\n        formData.append('file', file)\n\n        const response = await fetch('/api/upload', {\n          method: 'POST',\n          body: formData\n        })\n\n        if (!response.ok) {\n          const error = await response.json()\n          throw new Error(error.error || 'Erro no upload')\n        }\n      }\n\n      await loadUploadedFiles()\n      event.target.value = ''\n      alert('Arquivos enviados com sucesso!')\n    } catch (error) {\n      console.error('Erro no upload:', error)\n      alert(`Erro no upload: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    } finally {\n      setIsUploading(false)\n    }\n  }\n\n  const handleDeleteFile = async (fileUrl: string) => {\n    if (!confirm('Tem certeza que deseja deletar este arquivo?')) return\n\n    try {\n      const response = await fetch(`/api/upload?fileUrl=${encodeURIComponent(fileUrl)}`, {\n        method: 'DELETE'\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Erro ao deletar arquivo')\n      }\n\n      await loadUploadedFiles()\n      alert('Arquivo deletado com sucesso!')\n    } catch (error) {\n      console.error('Erro ao deletar arquivo:', error)\n      alert(`Erro ao deletar arquivo: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    }\n  }\n\n  const handleRegisterTV = async (event: React.FormEvent) => {\n    event.preventDefault()\n    \n    if (!tvName.trim() || !tvLocation.trim()) {\n      alert('Por favor, preencha todos os campos obrigatórios')\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const response = await fetch('/api/tv', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: tvName,\n          location: tvLocation,\n          currentPresentationId: selectedPresentationId || undefined\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Erro ao registrar TV')\n      }\n\n      const data = await response.json()\n      \n      setTvName('')\n      setTvLocation('')\n      setSelectedPresentationId('')\n      \n      await loadTVs()\n      \n      alert(`TV \"${data.tv.name}\" registrada com sucesso!\\nURL: ${window.location.origin}${data.tv.displayUrl}`)\n    } catch (error) {\n      console.error('Erro ao registrar TV:', error)\n      alert(`Erro ao registrar TV: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleCreatePresentation = async (event: React.FormEvent) => {\n    event.preventDefault()\n    \n    if (!presentationName.trim() || !selectedTemplateId || selectedFiles.length === 0) {\n      alert('Por favor, preencha todos os campos e selecione pelo menos um arquivo')\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const response = await fetch('/api/presentations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: presentationName,\n          templateId: selectedTemplateId,\n          slideDuration: slideDuration,\n          files: selectedFiles\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Erro ao criar apresentação')\n      }\n\n      const data = await response.json()\n      \n      setPresentationName('')\n      setSelectedTemplateId('')\n      setSlideDuration(5)\n      setSelectedFiles([])\n      \n      await loadPresentations()\n      \n      alert(`Apresentação \"${data.presentation.name}\" criada com sucesso!`)\n    } catch (error) {\n      console.error('Erro ao criar apresentação:', error)\n      alert(`Erro ao criar apresentação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleCreateTemplate = async (event: React.FormEvent) => {\n    event.preventDefault()\n    \n    if (!templateName.trim() || !templateDescription.trim()) {\n      alert('Por favor, preencha todos os campos obrigatórios')\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      const response = await fetch('/api/templates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: templateName,\n          description: templateDescription,\n          backgroundColor,\n          textColor,\n          headerColor,\n          footerColor,\n          fontFamily,\n          showClock,\n          showDate,\n          showProgress\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Erro ao criar template')\n      }\n\n      const data = await response.json()\n      \n      setTemplateName('')\n      setTemplateDescription('')\n      setBackgroundColor('#1a1a1a')\n      setTextColor('#ffffff')\n      setHeaderColor('#2563eb')\n      setFooterColor('#374151')\n      setFontFamily('Inter, sans-serif')\n      setShowClock(true)\n      setShowDate(true)\n      setShowProgress(true)\n      \n      await loadTemplates()\n      \n      alert(`Template \"${data.template.name}\" criado com sucesso!`)\n    } catch (error) {\n      console.error('Erro ao criar template:', error)\n      alert(`Erro ao criar template: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const toggleFileSelection = (fileUrl: string) => {\n    setSelectedFiles(prev => \n      prev.includes(fileUrl) \n        ? prev.filter(url => url !== fileUrl)\n        : [...prev, fileUrl]\n    )\n  }\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text)\n    alert('URL copiada para a área de transferência!')\n  }\n\n  const assignPresentationToTV = async (tvId: string, presentationId: string) => {\n    try {\n      const response = await fetch('/api/tv', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: tvId,\n          currentPresentationId: presentationId\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Erro ao atribuir apresentação')\n      }\n\n      await loadTVs()\n      alert('Apresentação atribuída com sucesso!')\n    } catch (error) {\n      console.error('Erro ao atribuir apresentação:', error)\n      alert(`Erro ao atribuir apresentação: ${error instanceof Error ? error.message : 'Erro desconhecido'}`)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"container mx-auto p-6\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\">\n            Painel Administrativo - Digital Signage\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Gerencie conteúdo, templates, apresentações e configure televisões\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"upload\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-6\">\n            <TabsTrigger value=\"upload\">Arquivos</TabsTrigger>\n            <TabsTrigger value=\"templates\">Templates</TabsTrigger>\n            <TabsTrigger value=\"presentations\">Apresentações</TabsTrigger>\n            <TabsTrigger value=\"tvs\">TVs</TabsTrigger>\n            <TabsTrigger value=\"register\">Registrar TV</TabsTrigger>\n            <TabsTrigger value=\"manage\">Gerenciar</TabsTrigger>\n          </TabsList>\n\n          {/* Tab de Upload */}\n          <TabsContent value=\"upload\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Gerenciar Arquivos</CardTitle>\n                <CardDescription>\n                  Envie e gerencie imagens e vídeos para usar nas apresentações\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"file-upload\">Selecionar Arquivos</Label>\n                  <Input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*,video/*\"\n                    onChange={handleFileUpload}\n                    disabled={isUploading}\n                    className=\"mt-2\"\n                  />\n                  {isUploading && (\n                    <p className=\"text-sm text-muted-foreground mt-2\">\n                      Enviando arquivos...\n                    </p>\n                  )}\n                </div>\n\n                <Separator />\n\n                <div>\n                  <h3 className=\"text-lg font-semibold mb-4\">Arquivos Disponíveis</h3>\n                  {uploadedFiles.length === 0 ? (\n                    <p className=\"text-muted-foreground\">Nenhum arquivo enviado ainda</p>\n                  ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {uploadedFiles.map((file, index) => (\n                        <Card key={index} className=\"p-4\">\n                          <div className=\"aspect-video bg-muted rounded-md mb-2 flex items-center justify-center\">\n                            {file.url.match(/\\.(jpg|jpeg|png|gif|webp)$/i) ? (\n                              <img \n                                src={file.url} \n                                alt={file.name}\n                                className=\"max-w-full max-h-full object-contain rounded\"\n                              />\n                            ) : (\n                              <div className=\"text-center\">\n                                <p className=\"text-sm font-medium\">Vídeo</p>\n                                <p className=\"text-xs text-muted-foreground\">{file.name}</p>\n                              </div>\n                            )}\n                          </div>\n                          <p className=\"text-sm font-medium truncate mb-2\">{file.name}</p>\n                          <div className=\"flex justify-between items-center\">\n                            <Badge variant={file.isUsed ? \"default\" : \"secondary\"}>\n                              {file.isUsed ? \"Em uso\" : \"Não usado\"}\n                            </Badge>\n                            {!file.isUsed && (\n                              <Button\n                                variant=\"destructive\"\n                                size=\"sm\"\n                                onClick={() => handleDeleteFile(file.url)}\n                              >\n                                Deletar\n                              </Button>\n                            )}\n                          </div>\n                        </Card>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Tab de Templates */}\n          <TabsContent value=\"templates\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Criar Novo Template</CardTitle>\n                  <CardDescription>\n                    Configure a aparência das apresentações\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <form onSubmit={handleCreateTemplate} className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"template-name\">Nome do Template</Label>\n                      <Input\n                        id=\"template-name\"\n                        type=\"text\"\n                        value={templateName}\n                        onChange={(e) => setTemplateName(e.target.value)}\n                        placeholder=\"Ex: Moderno, Corporativo\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"template-description\">Descrição</Label>\n                      <Textarea\n                        id=\"template-description\"\n                        value={templateDescription}\n                        onChange={(e) => setTemplateDescription(e.target.value)}\n                        placeholder=\"Descreva o estilo do template\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"bg-color\">Cor de Fundo</Label>\n                        <Input\n                          id=\"bg-color\"\n                          type=\"color\"\n                          value={backgroundColor}\n                          onChange={(e) => setBackgroundColor(e.target.value)}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"text-color\">Cor do Texto</Label>\n                        <Input\n                          id=\"text-color\"\n                          type=\"color\"\n                          value={textColor}\n                          onChange={(e) => setTextColor(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"header-color\">Cor do Cabeçalho</Label>\n                        <Input\n                          id=\"header-color\"\n                          type=\"color\"\n                          value={headerColor}\n                          onChange={(e) => setHeaderColor(e.target.value)}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"footer-color\">Cor do Rodapé</Label>\n                        <Input\n                          id=\"footer-color\"\n                          type=\"color\"\n                          value={footerColor}\n                          onChange={(e) => setFooterColor(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"font-family\">Família da Fonte</Label>\n                      <Select value={fontFamily} onValueChange={setFontFamily}>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"Inter, sans-serif\">Inter</SelectItem>\n                          <SelectItem value=\"Arial, sans-serif\">Arial</SelectItem>\n                          <SelectItem value=\"Helvetica, sans-serif\">Helvetica</SelectItem>\n                          <SelectItem value=\"Georgia, serif\">Georgia</SelectItem>\n                          <SelectItem value=\"Times New Roman, serif\">Times New Roman</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"show-clock\"\n                          checked={showClock}\n                          onCheckedChange={setShowClock}\n                        />\n                        <Label htmlFor=\"show-clock\">Mostrar Relógio</Label>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"show-date\"\n                          checked={showDate}\n                          onCheckedChange={setShowDate}\n                        />\n                        <Label htmlFor=\"show-date\">Mostrar Data</Label>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"show-progress\"\n                          checked={showProgress}\n                          onCheckedChange={setShowProgress}\n                        />\n                        <Label htmlFor=\"show-progress\">Mostrar Barra de Progresso</Label>\n                      </div>\n                    </div>\n\n                    <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                      {isLoading ? 'Criando...' : 'Criar Template'}\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Preview do Template</CardTitle>\n                  <CardDescription>\n                    Visualização em tempo real\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div \n                    className=\"aspect-video rounded-lg p-4 relative\"\n                    style={{ \n                      backgroundColor,\n                      color: textColor,\n                      fontFamily\n                    }}\n                  >\n                    <div \n                      className=\"absolute top-0 left-0 right-0 p-3 rounded-t-lg\"\n                      style={{ backgroundColor: headerColor }}\n                    >\n                      <div className=\"flex justify-between items-center text-sm\">\n                        <span>{templateName || 'Nome do Template'}</span>\n                        {showClock && <span>14:30:25</span>}\n                      </div>\n                      {showDate && (\n                        <div className=\"text-xs opacity-75\">\n                          Segunda-feira, 20 de Janeiro de 2025\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"flex items-center justify-center h-full\">\n                      <div className=\"text-center\">\n                        <h3 className=\"text-lg font-bold mb-2\">Conteúdo da Apresentação</h3>\n                        <p className=\"text-sm opacity-75\">Preview do template</p>\n                      </div>\n                    </div>\n\n                    <div \n                      className=\"absolute bottom-0 left-0 right-0 p-2 rounded-b-lg\"\n                      style={{ backgroundColor: footerColor }}\n                    >\n                      {showProgress && (\n                        <div className=\"w-full bg-black/20 rounded-full h-1\">\n                          <div className=\"bg-white h-1 rounded-full w-1/3\"></div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card className=\"mt-6\">\n              <CardHeader>\n                <CardTitle>Templates Existentes</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {templates.length === 0 ? (\n                  <p className=\"text-muted-foreground\">Nenhum template criado ainda</p>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {templates.map((template) => (\n                      <Card key={template.id} className=\"p-4\">\n                        <div \n                          className=\"aspect-video rounded-md mb-3 p-2 relative text-xs\"\n                          style={{ \n                            backgroundColor: template.backgroundColor,\n                            color: template.textColor,\n                            fontFamily: template.fontFamily\n                          }}\n                        >\n                          <div \n                            className=\"absolute top-0 left-0 right-0 p-1 rounded-t-md\"\n                            style={{ backgroundColor: template.headerColor }}\n                          >\n                            <div className=\"flex justify-between\">\n                              <span>{template.name}</span>\n                              {template.showClock && <span>14:30</span>}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center justify-center h-full\">\n                            <span>Preview</span>\n                          </div>\n                          {template.showProgress && (\n                            <div \n                              className=\"absolute bottom-0 left-0 right-0 p-1\"\n                              style={{ backgroundColor: template.footerColor }}\n                            >\n                              <div className=\"w-full bg-black/20 rounded-full h-0.5\">\n                                <div className=\"bg-white h-0.5 rounded-full w-1/2\"></div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        <h4 className=\"font-semibold\">{template.name}</h4>\n                        <p className=\"text-sm text-muted-foreground\">{template.description}</p>\n                      </Card>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Tab de Apresentações */}\n          <TabsContent value=\"presentations\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Criar Nova Apresentação</CardTitle>\n                  <CardDescription>\n                    Combine template e arquivos para criar uma apresentação\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <form onSubmit={handleCreatePresentation} className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"presentation-name\">Nome da Apresentação</Label>\n                      <Input\n                        id=\"presentation-name\"\n                        type=\"text\"\n                        value={presentationName}\n                        onChange={(e) => setPresentationName(e.target.value)}\n                        placeholder=\"Ex: Comunicados Janeiro, Anúncios RH\"\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"template-select\">Template</Label>\n                      <Select value={selectedTemplateId} onValueChange={setSelectedTemplateId}>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Selecione um template\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {templates.map((template) => (\n                            <SelectItem key={template.id} value={template.id}>\n                              {template.name}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <Label htmlFor=\"slide-duration\">Duração do Slide (segundos)</Label>\n                      <Input\n                        id=\"slide-duration\"\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"60\"\n                        value={slideDuration}\n                        onChange={(e) => setSlideDuration(parseInt(e.target.value))}\n                        required\n                      />\n                    </div>\n\n                    <div>\n                      <Label>Selecionar Arquivos</Label>\n                      <div className=\"mt-2 space-y-2 max-h-60 overflow-y-auto border rounded-md p-3\">\n                        {uploadedFiles.length === 0 ? (\n                          <p className=\"text-muted-foreground text-sm\">\n                            Nenhum arquivo disponível. Faça upload de arquivos primeiro.\n                          </p>\n                        ) : (\n                          uploadedFiles.map((file, index) => (\n                            <div key={index} className=\"flex items-center space-x-2\">\n                              <input\n                                type=\"checkbox\"\n                                id={`file-${index}`}\n                                checked={selectedFiles.includes(file.url)}\n                                onChange={() => toggleFileSelection(file.url)}\n                                className=\"rounded\"\n                              />\n                              <label \n                                htmlFor={`file-${index}`}\n                                className=\"text-sm cursor-pointer flex-1 truncate\"\n                              >\n                                {file.name}\n                              </label>\n                            </div>\n                          ))\n                        )}\n                      </div>\n                      {selectedFiles.length > 0 && (\n                        <p className=\"text-sm text-muted-foreground mt-2\">\n                          {selectedFiles.length} arquivo(s) selecionado(s)\n                        </p>\n                      )}\n                    </div>\n\n                    <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                      {isLoading ? 'Criando...' : 'Criar Apresentação'}\n                    </Button>\n                  </form>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Apresentações Existentes</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {presentations.length === 0 ? (\n                    <p className=\"text-muted-foreground\">Nenhuma apresentação criada ainda</p>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {presentations.map((presentation) => (\n                        <Card key={presentation.id} className=\"p-4\">\n                          <h4 className=\"font-semibold\">{presentation.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Template: {templates.find(t => t.id === presentation.templateId)?.name || 'N/A'}\n                          </p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Duração: {presentation.slideDuration}s | Arquivos: {presentation.files.length}\n                          </p>\n                          <p className=\"text-xs text-muted-foreground\">\n                            Criado: {new Date(presentation.createdAt).toLocaleDateString('pt-BR')}\n                          </p>\n                        </Card>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Tab de TVs */}\n          <TabsContent value=\"tvs\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Registrar Nova TV</CardTitle>\n                <CardDescription>\n                  Configure uma nova televisão com URL fixa\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleRegisterTV} className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"tv-name\">Nome da TV</Label>\n                    <Input\n                      id=\"tv-name\"\n                      type=\"text\"\n                      value={tvName}\n                      onChange={(e) => setTvName(e.target.value)}\n                      placeholder=\"Ex: TV Recepção, TV Sala de Reuniões\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"tv-location\">Localização</Label>\n                    <Input\n                      id=\"tv-location\"\n                      type=\"text\"\n                      value={tvLocation}\n                      onChange={(e) => setTvLocation(e.target.value)}\n                      placeholder=\"Ex: Recepção, Sala de Reuniões, Corredor\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"presentation-select\">Apresentação (Opcional)</Label>\n                    <Select value={selectedPresentationId} onValueChange={setSelectedPresentationId}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Selecione uma apresentação\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">Nenhuma apresentação</SelectItem>\n                        {presentations.map((presentation) => (\n                          <SelectItem key={presentation.id} value={presentation.id}>\n                            {presentation.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                    {isLoading ? 'Registrando...' : 'Registrar TV'}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Tab de Registro (mantida para compatibilidade) */}\n          <TabsContent value=\"register\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Registrar Nova TV</CardTitle>\n                <CardDescription>\n                  Esta aba foi movida para \"TVs\". Use a aba \"TVs\" para registrar novas televisões.\n                </CardDescription>\n              </CardHeader>\n            </Card>\n          </TabsContent>\n\n          {/* Tab de Gerenciamento */}\n          <TabsContent value=\"manage\">\n            <Card>\n              <CardHeader>\n                <CardTitle>TVs Registradas</CardTitle>\n                <CardDescription>\n                  Visualize e gerencie todas as televisões cadastradas\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {tvs.length === 0 ? (\n                  <p className=\"text-muted-foreground\">Nenhuma TV registrada ainda</p>\n                ) : (\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Nome</TableHead>\n                        <TableHead>Localização</TableHead>\n                        <TableHead>Apresentação Atual</TableHead>\n                        <TableHead>URL de Exibição</TableHead>\n                        <TableHead>Ações</TableHead>\n                        <TableHead>Criado em</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {tvs.map((tv) => (\n                        <TableRow key={tv.id}>\n                          <TableCell className=\"font-medium\">{tv.name}</TableCell>\n                          <TableCell>{tv.location}</TableCell>\n                          <TableCell>\n                            {tv.currentPresentationId ? (\n                              <Badge variant=\"default\">\n                                {presentations.find(p => p.id === tv.currentPresentationId)?.name || 'N/A'}\n                              </Badge>\n                            ) : (\n                              <Badge variant=\"secondary\">Nenhuma</Badge>\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => copyToClipboard(`${window.location.origin}${tv.displayUrl}`)}\n                            >\n                              Copiar URL\n                            </Button>\n                          </TableCell>\n                          <TableCell>\n                            <Select\n                              value={tv.currentPresentationId || \"\"}\n                              onValueChange={(value) => assignPresentationToTV(tv.id, value)}\n                            >\n                              <SelectTrigger className=\"w-40\">\n                                <SelectValue placeholder=\"Atribuir\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"\">Nenhuma</SelectItem>\n                                {presentations.map((presentation) => (\n                                  <SelectItem key={presentation.id} value={presentation.id}>\n                                    {presentation.name}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </TableCell>\n                          <TableCell>\n                            {new Date(tv.createdAt).toLocaleDateString('pt-BR')}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}